---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: eureka-deploy
spec:
  selector:
        matchLabels:
          app: {{ .Values.image.metadata.eureka }}
  template:
        metadata:
          labels:
            app: {{ .Values.image.metadata.eureka }}
        spec:
          containers:
          - name: eureka
            image: "{{ .Values.image.repository.eureka.value }}:{{ .Values.image.repository.eureka.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            env:
            - name: CONFIG_SERVICE
              value: {{ .Values.configService }}
            ports:
            - containerPort: {{ .Values.image.repository.eureka.port }}
            livenessProbe:
              tcpSocket:
                port: {{ .Values.image.repository.eureka.port }}
              initialDelaySeconds: 60
              periodSeconds: 60
          imagePullSecrets:
            - name: {{ .Values.image.imageSecrets }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.image.metadata.key }}-keyserver-secret
  labels:
    app: {{ .Values.image.metadata.key }}
data:
{{ ( .Files.Glob "conf/sample.txt" ).AsSecrets | indent 2 }}
{{ ( .Files.Glob "conf/pass.txt" ).AsSecrets | indent 2 }}
{{ ( .Files.Glob "conf/testing.txt" ).AsSecrets | indent 2 }}
{{ ( .Files.Glob "conf/legacy.txt" ).AsSecrets | indent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: key-deploy
spec:
  selector:
        matchLabels:
          app: {{ .Values.image.metadata.key }}
  template:
        metadata:
          labels:
            app: {{ .Values.image.metadata.key }}
        spec:
          containers:
          - name: key
            image: "{{ .Values.image.repository.key.value }}:{{ .Values.image.repository.key.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            env:
            - name: CONFIG_SERVICE
              value: {{ .Values.configService }}
            - name: DB_USERNAME
              value: {{ .Values.db.username }}    
            - name: DB_PASSWORD
              value: {{ .Values.db.password }}
            - name: DB_URL
              value: {{ .Values.db.url }}
            - name: EGA_KEY_PATH
              value: /etc/ega/pgp/key.1.sec
            - name: EGA_KEYPASS_PATH
              value: /etc/ega/pgp/key.1.sec.pass
            - name: EGA_SHAREDPASS_PATH
              value: /etc/ega/pgp/shared.pass
            - name: EGA_PUBLICKEY_URL
              value:
            - name: EGA_LEGACY_PATH
              value: /etc/ega/pgp/legacy.txt
            ports:
            - containerPort: {{ .Values.image.repository.key.port }}
            livenessProbe:
              tcpSocket:
                port: {{ .Values.image.repository.key.port }}
              initialDelaySeconds: 60
              periodSeconds: 60
            volumeMounts:
              - name: keyserver-pgpkeys
                mountPath: /etc/ega/pgp
          volumes:
            - name: keyserver-pgpkeys
              projected:
                sources:
                  - secret:
                      name: {{ .Values.image.metadata.key }}-keyserver-secret
                      items:
                      - key: sample.txt
                        path: key.1.sec
                      - key: testing.txt
                        path: shared.pass
                      - key: pass.txt
                        path: key.1.sec.pass
                      - key: legacy.txt
                        path: legacy.txt
          imagePullSecrets:
            - name: {{ .Values.image.imageSecrets }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filedatabase-deploy
spec:
  selector:
        matchLabels:
          app: {{ .Values.image.metadata.filedatabase }}          
  template:
        metadata:
          labels:
            app: {{ .Values.image.metadata.filedatabase }}
        spec:
          containers:
          - name: filedatabase
            image: "{{ .Values.image.repository.filedatabase.value }}:{{ .Values.image.repository.filedatabase.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            env:
            - name: CONFIG_SERVICE
              value: {{ .Values.configService }}
            - name: DB_USERNAME
              value: {{ .Values.db.username }}    
            - name: DB_PASSWORD
              value: {{ .Values.db.password }}
            - name: DB_URL
              value: {{ .Values.db.url }}
            ports:
            - containerPort: {{ .Values.image.repository.filedatabase.port }}
            livenessProbe:
              tcpSocket:
                port: {{ .Values.image.repository.filedatabase.port }}
              initialDelaySeconds: 60
              periodSeconds: 60
          imagePullSecrets:
            - name: {{ .Values.image.imageSecrets }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: res-deploy
spec:
  selector:
        matchLabels:
          app: {{ .Values.image.metadata.res }} 
  template:
        metadata:
          labels:
            app: {{ .Values.image.metadata.res }} 
        spec:
          containers:
          - name: res
            image: "{{ .Values.image.repository.res.value }}:{{ .Values.image.repository.res.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            env:
            - name: CONFIG_SERVICE
              value: {{ .Values.configService }}
            - name: S3_ACCESS_KEY
              value: {{ .Values.s3.access.key }}    
            - name: S3_ACCESS_SECRET
              value: {{ .Values.s3.access.secret }}
            - name: S3_ACCESS_URL
              value: {{ .Values.s3.access.url }}
            - name: S3_ACCESS_REGION
              value: {{ .Values.s3.access.region }}                         
            ports:
            - containerPort: {{ .Values.image.repository.res.port }}
            livenessProbe:
              tcpSocket:
                port: {{ .Values.image.repository.res.port }}
              initialDelaySeconds: 60
              periodSeconds: 60
          imagePullSecrets:
            - name: {{ .Values.image.imageSecrets }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.image.metadata.dataedge }}-dataedge-public-key
  labels:
    app: {{ .Values.image.metadata.dataedge }}
data:
{{ ( .Files.Glob "conf/public.key" ).AsConfig | indent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dataedge-deploy
spec:
  selector:
        matchLabels:
          app: {{ .Values.image.metadata.dataedge }} 
  template:
        metadata:
          labels:
            app: {{ .Values.image.metadata.dataedge }} 
        spec:
          containers:
          - name: dataedge
            image: "{{ .Values.image.repository.dataedge.value }}:{{ .Values.image.repository.dataedge.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            env:
            - name: CONFIG_SERVICE
              value: {{ .Values.configService }}
            - name: JWTKEY
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.image.metadata.dataedge }}-dataedge-public-key
                  key: public.key
            ports:
            - containerPort: {{ .Values.image.repository.dataedge.port }}
            livenessProbe:
              tcpSocket:
                port: {{ .Values.image.repository.dataedge.port }}
              initialDelaySeconds: 60
              periodSeconds: 60
          imagePullSecrets:
            - name: {{ .Values.image.imageSecrets }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: htsget-deploy
spec:
  selector:
        matchLabels:
          app: {{ .Values.image.metadata.htsget }} 
  template:
        metadata:
          labels:
            app: {{ .Values.image.metadata.htsget }} 
        spec:
          containers:
          - name: htsget
            image: "{{ .Values.image.repository.htsget.value }}:{{ .Values.image.repository.htsget.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            env:
            - name: CONFIG_SERVICE
              value: {{ .Values.configService }}
            ports:
            - containerPort: {{ .Values.image.repository.htsget.port }}
            livenessProbe:
              tcpSocket:
                port: {{ .Values.image.repository.htsget.port }}
              initialDelaySeconds: 60
              periodSeconds: 60
          imagePullSecrets:
            - name: {{ .Values.image.imageSecrets }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hystrix-deploy
spec:
  selector:
        matchLabels:
          app: {{ .Values.image.metadata.hystrix }} 
  template:
        metadata:
          labels:
            app: {{ .Values.image.metadata.hystrix }} 
        spec:
          containers:
          - name: hystrix
            image: "{{ .Values.image.repository.hystrix.value }}:{{ .Values.image.repository.hystrix.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            ports:
            - containerPort: {{ .Values.image.repository.hystrix.port }}
            livenessProbe:
              tcpSocket:
                port: {{ .Values.image.repository.hystrix.port }}
              initialDelaySeconds: 60
              periodSeconds: 60
          imagePullSecrets:
            - name: {{ .Values.image.imageSecrets }}
