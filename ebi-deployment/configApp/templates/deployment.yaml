---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.image.metadata.config }}-configs
  labels:
    app: {{ .Values.image.metadata.config }}
data:
{{ ( .Files.Glob "config/*.properties" ).AsConfig | indent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-deploy
spec:
  selector:
        matchLabels:
          app: {{ .Values.image.metadata.config }}
  template:
        metadata:
          labels:
            app: {{ .Values.image.metadata.config }}
        spec:
          containers:
          - name: config
            image: "{{ .Values.image.repository.config.value }}:{{ .Values.image.repository.config.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            ports:
            - containerPort: {{ .Values.image.repository.config.port }}
            livenessProbe:
              tcpSocket:
                port: {{ .Values.image.repository.config.port }}
              initialDelaySeconds: 60
              periodSeconds: 60
            volumeMounts:
              - name: config
                mountPath: /config-files
                readOnly: true
          imagePullSecrets:
            - name: {{ .Values.image.imageSecrets }}
          volumes:
            - name: config
              projected:
                sources:
                  - configMap:
                      name: {{ .Values.image.metadata.config }}-configs

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.image.metadata.postgres }}-initsql
  labels:
    app: {{ .Values.image.metadata.postgres }}
data:
  {{ ( .Files.Glob "conf/init.sql" ).AsConfig | indent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deploy
spec:
  selector:
        matchLabels:
          app: {{ .Values.image.metadata.postgres }}
  template:
        metadata:
          labels:
            app: {{ .Values.image.metadata.postgres }}
        spec:
          containers:
          - name: postgres
            image: "{{ .Values.image.repository.postgres.value }}:{{ .Values.image.repository.postgres.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            env:
            - name: POSTGRES_USER
              value: testuser
            - name: POSTGRES_PASSWORD
              value: testpassw0rd
            - name: POSTGRES_DB
              value: egapro
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            ports:
            - containerPort: {{ .Values.image.repository.postgres.port }}
            volumeMounts:
              - name: initdb
                mountPath: /docker-entrypoint-initdb.d
                readOnly: true
          volumes:
            - name: initdb
              projected:
                sources:
                  - configMap:
                      name: {{ .Values.image.metadata.postgres }}-initsql
                      items:
                      - key: init.sql
                        path: init.sql